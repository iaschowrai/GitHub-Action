# GitHub Actions workflow to build and deploy a Spring Boot application in Docker

name: Build and Deploy Spring Boot for Learning in Easy Steps  # Name of the workflow displayed in GitHub Actions UI

on:  # Event that triggers the workflow
  push:  # Trigger on push events
    branches:  # Specify the branches to trigger the workflow
      - main  # Workflow runs when code is pushed to the main branch

jobs:  # Define jobs to be executed as part of the workflow
  build-deploy:  # Job name (arbitrary but descriptive)
    name: Build and Deploy Spring Boot  # Display name for the job
    runs-on: ubuntu-latest  # The virtual machine environment to run the job

    steps:  # Sequence of tasks executed by the job
      - name: Checkout code  # Step to checkout the repository code
        uses: actions/checkout@v3  # GitHub-provided action to clone the repository code into the runner

      - name: Setup JDK 17  # Step to install JDK 17
        uses: actions/setup-java@v3  # GitHub action to set up the Java environment
        with:
          distribution: 'corretto'  # Java distribution to use (Amazon Corretto)
          java-version: 17  # Specify Java version 17

      - name: Unit Tests  # Step to run unit tests
        run: mvn -B test --file pom.xml  # Maven command to execute tests with batch mode enabled

      - name: Build the application  # Step to build the application using Maven
        run: |
          mvn clean  # Clean previous build artifacts
          mvn -B package --file pom.xml  # Package the application as a JAR

      - name: Build Docker Image  # Step to build the Docker image
        uses: docker/build-push-action@v4  # Action to build and optionally push Docker images
        with:
          context: .  # Path to the Docker build context (current directory)
          file: ./Dockerfile  # Path to the Dockerfile
          push: false  # Set to false as pushing is not required (for now)
          tags: ghcr.io/${{ github.repository }}:${{ github.run_id }}  # Tag the Docker image with GitHub Container Registry (GHCR) format

          # Note: Docker Hub login and push steps are removed since credentials are not to be used

          # Optional steps can be added to push to GHCR automatically if needed

#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:${{ github.run_id }}

      # Step 6: Login to Docker Hub using secrets stored in GitHub
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      # Step 7: Push Docker image to Docker Hub
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:${{ github.run_id }}
